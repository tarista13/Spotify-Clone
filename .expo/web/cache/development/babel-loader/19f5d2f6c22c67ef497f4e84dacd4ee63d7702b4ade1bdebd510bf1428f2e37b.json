{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LikedSongsScreen = function LikedSongsScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  return _jsx(LinearGradient, {\n    colors: [\"#614385\", \"#516395\"],\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        marginTop: 40\n      },\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        style: {\n          marginHorizontal: 10\n        },\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"white\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsxs(Pressable, {\n          children: [_jsx(AntDesign, {\n            name: \"search1\",\n            size: 24,\n            color: \"white\"\n          }), _jsx(TextInput, {\n            value: input,\n            onChangeText: function onChangeText(text) {\n              return SingleTouchInput(text);\n            },\n            placeholder: \"Find in Liked Songs\",\n            placeholderTextColor: \"white\"\n          })]\n        })\n      })]\n    })\n  });\n};\nexport default LikedSongsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","LinearGradient","Ionicons","useNavigation","AntDesign","jsx","_jsx","jsxs","_jsxs","LikedSongsScreen","navigation","_useState","_useState2","_slicedToArray","input","setInput","colors","style","flex","children","ScrollView","marginTop","Pressable","onPress","goBack","marginHorizontal","name","size","color","TextInput","value","onChangeText","text","SingleTouchInput","placeholder","placeholderTextColor","styles","StyleSheet","create"],"sources":["/Users/t_arista/Downloads/Projects/SP/spotify-Clone/navigation/Screens/LikedSongsScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, Pressable, ScrollView, TextInput } from \"react-native\";\nimport React, {useState} from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AntDesign } from '@expo/vector-icons';\n\nconst LikedSongsScreen = () => {\n  const navigation = useNavigation();\n  const [input, setInput] = useState(\"\");\n  return (\n    <LinearGradient colors={[\"#614385\", \"#516395\"]} style={{ flex: 1 }}>\n      <ScrollView style={{ flex: 1, marginTop: 40 }}>\n        <Pressable\n          onPress={() => navigation.goBack()}\n          style={{ marginHorizontal: 10 }}\n        >\n          <Ionicons name=\"arrow-back\" size={24} color=\"white\" />\n        </Pressable>\n\n        <Pressable>\n\n          <Pressable>\n            <AntDesign name=\"search1\" size={24} color=\"white\" />\n            <TextInput value={input} onChangeText={(text) => SingleTouchInput(text)} placeholder=\"Find in Liked Songs\" placeholderTextColor={\"white\"}/>\n          </Pressable>\n        </Pressable>\n\n      </ScrollView>\n    </LinearGradient>\n  );\n};\n\nexport default LikedSongsScreen;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,IAAAQ,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,OACEN,IAAA,CAACL,cAAc;IAACe,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACjEX,KAAA,CAACY,UAAU;MAACH,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEG,SAAS,EAAE;MAAG,CAAE;MAAAF,QAAA,GAC5Cb,IAAA,CAACgB,SAAS;QACRC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMb,UAAU,CAACc,MAAM,CAAC,CAAC;QAAA,CAAC;QACnCP,KAAK,EAAE;UAAEQ,gBAAgB,EAAE;QAAG,CAAE;QAAAN,QAAA,EAEhCb,IAAA,CAACJ,QAAQ;UAACwB,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CAC7C,CAAC,EAEZtB,IAAA,CAACgB,SAAS;QAAAH,QAAA,EAERX,KAAA,CAACc,SAAS;UAAAH,QAAA,GACRb,IAAA,CAACF,SAAS;YAACsB,IAAI,EAAC,SAAS;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAO,CAAE,CAAC,EACpDtB,IAAA,CAACuB,SAAS;YAACC,KAAK,EAAEhB,KAAM;YAACiB,YAAY,EAAE,SAAAA,aAACC,IAAI;cAAA,OAAKC,gBAAgB,CAACD,IAAI,CAAC;YAAA,CAAC;YAACE,WAAW,EAAC,qBAAqB;YAACC,oBAAoB,EAAE;UAAQ,CAAC,CAAC;QAAA,CAClI;MAAC,CACH,CAAC;IAAA,CAEF;EAAC,CACC,CAAC;AAErB,CAAC;AAED,eAAe1B,gBAAgB;AAE/B,IAAM2B,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}